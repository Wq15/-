<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--命名空间是对应接口的包名+类名,指定要映射的接口 -->
<!--<mapper namespace="example.dao.UserDao">-->
<!--id是接口中的方法名，结果类型如没有在mybatis.xml文件中配置别名，则必须使用全名称（包名+类名） -->
<mapper namespace="example.dao.UserDao">

    <resultMap id="studentmap" type="example.pojo.Student" >
        <id column="id"                         property="id"/>
        <result column="name"                   property="name"/>
        <result column="qq"                     property="qq"/>
        <result column="types_of_correction"  property="typesOfCorrection"/>
        <result column="admission_date"         property="admissionDate"/>
        <result column="graduate_school"        property="graduateSchool"/>
        <result column="student_id"             property="studentId"/>
        <result column="daily_link"             property="dailyLink"/>
        <result column="mentor_brother"         property="mentorBrother"/>
        <result column="oath"                   property="oath"/>
    </resultMap>
<!--select id,`name`,qq,types_of_correction,admission_date,graduate_school,student_id,daily_link,mentor_brother,oath from student-->
    <select id="getAllUsers" resultMap="studentmap">
    select * from student
    </select>

    <select id="select"  parameterType="int" resultMap="studentmap">
        select * from student where id= #{id}
    </select>

    <select id="selectByName" parameterType="string" resultType="User">
        select * from user where username = #{username}
</select>

    <insert id="insertStudent" parameterType="example.pojo.Student">
        insert into student (id,name,qq,types_of_correction,admission_date,graduate_school,student_id,daily_link,mentor_brother,oath) values(#{id},#{name},#{qq},#{typesOfCorrection},#{admissionDate},#{graduateSchool},#{studentId},#{dailyLink},#{mentorBrother},#{oath})
    </insert>

    <update id="updateStudent" parameterType="example.pojo.Student">
        update student set name=#{name},qq=#{qq},types_of_correction=#{typesOfCorrection},admission_date=#{admissionDate},graduate_school=#{graduateSchool},student_id=#{studentId},daily_link=#{dailyLink},mentor_brother=#{mentorBrother},oath=#{oath} where id= #{id}
    </update>

    <delete id="deleteStudent" parameterType="int">
     delete from student where id= #{id}
    </delete>

</mapper>