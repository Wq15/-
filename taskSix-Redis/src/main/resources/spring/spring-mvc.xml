<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                         http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd
                        http://www.springframework.org/schema/mvc

                        http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--本文件相当于-->
    <!--启用spring的注解annotation -->
    <context:annotation-config/>

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.controller ">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <mvc:annotation-driven/>

    <aop:aspectj-autoproxy />

    <!-- 定义aspect类 -->
        <bean name="timeInterceptor" class="tools.TimeInterceptor"/>
    <!-- 启动@aspectj的自动代理支持-->



    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>




    <!-- tiles整合 start-->
    <bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" p:order="1">
    </bean>
    <bean id="tilesConfigurer"
          class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles/tiles.xml</value>
            </list>
        </property>
    </bean>


    <mvc:interceptors>
    <mvc:interceptor>
        <!-- 对/profession的请求进行拦截 -->
        <mvc:mapping path="/u/*"/>
        <bean class="com.pojo.LoginInterceptor" />
    </mvc:interceptor>
    </mvc:interceptors>

    <!-- 定义aspect类 -->
<!--    <bean name="timeInterceptor" class="com.pojo.aoptool.TimeInterceptor"/>-->
    <!-- 启动@aspectj的自动代理支持-->

<!--    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" p:order="1"></bean>-->
<!--    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">-->
<!--        <property name="definitions">-->
<!--            <list>-->
<!--                <value>classpath:layout.xml</value>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->

    <!-- 添加视图解析器前后缀，这里默认使用.jsp文件-->
<!--    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
<!--        <property name="prefix" value="/WEB-INF/view/"/>&lt;!&ndash;设置JSP文件的目录位置&ndash;&gt;-->
<!--        <property name="suffix" value=".jsp"/>-->
<!--    </bean>-->

    <!--静态资源交给默认的Servlet-->
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven></mvc:annotation-driven>
</beans>